// Generated by CoffeeScript 1.3.3
(function() {

  define(['isotope'], function() {
    var capitalize, getStyleProperty, prefixes, _originalHookSet, _transitionDurationProp;
    prefixes = "Moz Webkit O Ms".split(" ");
    capitalize = function(str) {
      return str.charAt(0).toUpperCase() + str.slice(1);
    };
    getStyleProperty = (typeof Modernizr !== "undefined" && Modernizr !== null ? Modernizr.prefixed : void 0) != null ? Modernizr.prefixed : function(propName) {
      var prefix, prefixed, style, _i, _len;
      style = document.documentElement.style;
      prefixed = null;
      if (typeof style[propName] === "string") {
        return propName;
      }
      propName = capitalize(propName);
      for (_i = 0, _len = prefixes.length; _i < _len; _i++) {
        prefix = prefixes[_i];
        prefixed = prefix + propName;
        if (typeof style[prefixed] === "string") {
          return prefixed;
        }
      }
    };
    _originalHookSet = $.cssHooks.translate.set;
    _transitionDurationProp = getStyleProperty('transitionDuration');
    return $.cssHooks.translate.set = function(elem, value) {
      var duration, isTwoWay, posData, timer, _value;
      isTwoWay = $.data(elem.parentElement, 'isTwoWay');
      if (isTwoWay != null) {
        if (!isTwoWay) {
          return _originalHookSet(elem, value);
        }
      }
      posData = $.data(elem, "isoTransform");
      _value = null;
      if ($.data(elem, 'timer')) {
        clearTimeout($.data(elem, 'timer'));
        $.data(elem, 'timer', null);
      }
      if (posData != null) {
        if ($.data(elem, 'duration') == null) {
          $.data(elem, 'duration', parseFloat(getComputedStyle(elem)[_transitionDurationProp]) * 1000);
        }
        duration = $.data(elem, 'duration');
        timer = setTimeout(function() {
          return _originalHookSet(elem, value);
        }, duration);
        $.data(elem, 'timer', timer);
      }
      if ((posData != null ? posData.translate : void 0) != null) {
        _value = Math.random() < .5 ? [value[0], posData.translate[1]] : [posData.translate[0], value[1]];
      } else {
        _value = value;
      }
      return _originalHookSet(elem, _value);
    };
  });

}).call(this);
